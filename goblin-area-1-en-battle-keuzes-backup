using System;
using System.Security.Cryptography.X509Certificates;

namespace goblin
{

    public static class Xp
    {
        public static int xpneed = 1;
    };
    class world
    {
        public Boolean Area1(int[] stats)
        {
            int keuze = 0;
            Boolean area1 = true;
        checkinput:;
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you find yourself in a stange room...");
            Console.ReadLine();
            Console.WriteLine();
            Console.WriteLine("all you see is a door and some boxes that look empty");
            Console.ReadLine();
        boxes:;
            Console.WriteLine();
            Console.WriteLine("1. leave the room.    2. check out the boxes");
            try
            {
                keuze = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("at least try choosing a number");
                Console.ReadLine();
                Console.Clear();
                goto checkinput;
            }

            if (keuze == 1)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you walk to the door... open it... and...");
                Console.ReadLine();
                Console.Clear();
                area1 = false;
            }
            if (keuze == 2)
            {
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("as expected... the boxes are indeed empty...");
            Console.ReadLine();
            Console.Clear();
            goto boxes;
            }
            

            Console.Clear();


            return area1;
        }
    }
    class goblin
    {
        public string Goblinart()
        {
            string goblinart = @"
             ,      ,
            /(.-""-.)\
        |\  \/      \/  /|
        | \ / =.  .= \ / |
        \( \   o\/o   / )/
         \_, '-/  \-' ,_/
           /   \__/   \
           \ \__/\__/ /
         ___\ \|--|/ /___
       /`    \      /    `\
      /       '----'       \";
            Console.WriteLine(goblinart);
            return goblinart;
        }
        public int Monsters(int[] stats)
        {
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Random rnd = new Random();
            int rndnum = rnd.Next(1, 20 + 1);
            int a = rndnum;
            return rndnum;
        }

        public int[] Goblin()
        {
            int[] statsgoblin = { 5, 1, 2, 1 };
            return statsgoblin;
        }
        public int[] luckyGoblin()
        {
            int[] statsgoblin = { 7, 2, 2, 7 };
            return statsgoblin;
        }
        public int[] goblinking()
        {
            int[] statsgoblin = { 20, 3, 1, 1 };
            return statsgoblin;
        }
        public int[] goblindamage(int[] stats, int[] goblinstats)
        {
            Boolean crit = false;
            for (int i = 0; i < stats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 20 + 1);
                int a = rndnum;
                if (rndnum == 10)
                {
                    crit = true;
                }
            }
            if (crit == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you attack and do " + stats[1] * 2 + " damage");
                goblinstats[0] = goblinstats[0] - stats[1] * 2;
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you attack and do " + stats[1] + " damage");
                goblinstats[0] = goblinstats[0] - stats[1];
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return goblinstats;
        }
    }

    class player
    {
        public int[] Block(int[] stats,int[] goblinstats)
        {
            Boolean block = false;
            for (int i = 0; i < stats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 10 + 1);
                int a = rndnum;
                if (rndnum == 10)
                {
                    block = true;
                }
            }
            if (block == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacked.. you blocked and reflect " + goblinstats[1] + " damage");
                goblinstats[0] = goblinstats[0] - goblinstats[1];
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacked.. through your block and did " + goblinstats[1] + " damage");
                stats[0] = stats[0] - goblinstats[1];
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return stats;
        }
        public int Move(Boolean special, int[] stats, int[] goblinstats)
        {
        keuze:;
            int move = 0;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("1. attack    2. block    3.special");
            try
            {
                move = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("attack");
                Console.ReadLine();
                Console.Clear();
                goto keuze;
            }
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");

            return move;
        }
        public Boolean Special(Boolean special)
        {
            special = false;
            return special;
        }
        public int[] Resethealth(int[] stats,int defaulthealth)
        {
            int[] resethealth = { defaulthealth, stats[1], stats[2], stats[3] };
            return resethealth;
        }


        public int xp(int xpstand, int xp)
        {
            xpstand = xpstand + xp;
            return xpstand;
        }
        public int lvl(int xp, int lvl, int[] stats)
        {
            int lvlcheck = 2 * lvl;
            if (xp >= lvlcheck)
            {
                lvl++;
            oops:;
                Console.WriteLine("lvl up");
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                string keuze = Console.ReadLine();
                Console.Clear();
                try
                {
                    stats[Int32.Parse(keuze) - 1]++;
                }
                catch
                {
                    goto oops;
                }

            }
            return lvl;
        }
        public int[] damage(int[] stats, int[] goblinstats)
        {
            Boolean crit = false;
            for (int i = 0; i < goblinstats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 10 + 1);
                if (rndnum == 10)
                {
                    crit = true;
                }
            }
            if (crit == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacks and does " + goblinstats[1] * 2 + " damage");
                stats[0] = stats[0] - goblinstats[1] * 2;
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacks and does " + goblinstats[1] + " damage");
                stats[0] = stats[0] - goblinstats[1];
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return stats;
        }
        public string name()
        {
            Console.WriteLine("name");
            string name = Console.ReadLine();
            Console.Clear();
            return name;
        }

        public int[] Stats_setup(int lvl)
        {
            int[] stats = { 1, 1, 1, 1 };
            Console.WriteLine(lvl + " points to spend on stats");
            for (int i = 0; i < lvl; i++)
            {
            oops:;
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                string keuze = Console.ReadLine();
                Console.Clear();
                try
                {
                    stats[Int32.Parse(keuze) - 1]++;
                }
                catch
                {
                    goto oops;
                }
            }

            return stats;
        }

        public int[] Stats(int[] stats)
        {
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            return stats;
        }

        static void Main()
        {
            Xp.xpneed = 1;
            int move = 0;
            int lvl = 5;
            int lvlupcheck = 0;
            int xp = 0;
            int monsters = 0;
            Boolean area1 = true;
            Boolean special = true;
            Boolean goblin_alive = false;
            Boolean luckygoblin_alive = false;
            Boolean goblinking_alive = false;
            string name = " ";
            player n = new();
            goblin nn = new();
            world nnn = new();
            //name = n.name();

            //Console.WriteLine("hello " + name);
            //Console.ReadLine();
            int[] stats = { 0, 0, 0, 0 };
            n.Stats(stats);
            Console.WriteLine();
            Console.WriteLine();
            stats = n.Stats_setup(lvl);
            int defaulthealth = stats[0];

        world:;
            while(area1 == true)
            {
                area1 = nnn.Area1(stats);
            }
            goto monsters;
        goblin:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("goblin encounter");
            string goblinart = nn.Goblinart();
            Console.ReadLine();
            int[] goblinstats = nn.Goblin();
            while (goblin_alive == true)
            {
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if(lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
            }
        luckygoblin:;
            goblinstats = nn.luckyGoblin();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("a lucky goblin showed up");
            Console.ReadLine();
            while (luckygoblin_alive == true)
            {
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        luckygoblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        xp = n.xp(xp, 100);
                        lvl = n.lvl(xp, lvl, stats);
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        luckygoblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        xp = n.xp(xp, 20);
                        lvl = n.lvl(xp, lvl, stats);
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
            }

        goblinking:;
            goblinstats = nn.goblinking();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("goblin king showed up");
            Console.ReadLine();
            while (goblinking_alive == true)
            {
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblinking_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin king dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        xp = n.xp(xp, 20);
                        lvl = n.lvl(xp, lvl, stats);
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        goblinstats = nn.goblindamage(stats, goblinstats);
                        stats = n.damage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblinking_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin king dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        xp = n.xp(xp, 20);
                        lvl = n.lvl(xp, lvl, stats);
                        defaulthealth = stats[0];
                        goto monsters;
                    }

                }
            }
        monsters:;
            monsters = nn.Monsters(stats);
            if (monsters >= 2)
            {
                goblin_alive = true;
                goto goblin;
            }
            if (monsters == 1)
            {
                luckygoblin_alive = true;
                goto luckygoblin;
            }
            if (monsters == 10)
            {
                goblinking_alive = true;
                goto goblinking;
            }
        dead:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you died");
        }
    }
}
